global
	log 127.0.0.1 local2
	# need logging for letsencrypt ???
	chroot /var/lib/haproxy
	stats socket /run/haproxy-admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
	maxconn 2048
	tune.ssl.default-dh-param 2048

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:!RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11


defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	# errorfile 400 /etc/haproxy/errors/400.http
	# errorfile 403 /etc/haproxy/errors/403.http
	# errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	# errorfile 502 /etc/haproxy/errors/502.http
	# errorfile 503 /etc/haproxy/errors/503.http
	# errorfile 504 /etc/haproxy/errors/504.http
	option forwardfor
	option http-server-close
	timeout tunnel  1h    # timeout to use with WebSocket and CONNECT



{% if load_balancer_handle_external %}

frontend www-http
	bind *:80
	{% if ansible_default_ipv6 | length > 0 -%}
	bind {{ ansible_default_ipv6.address }}:80
	{%- endif %}
	
	http-request set-header X-Forwarded-Proto http
	default_backend www-backend

frontend www-https
	bind *:443 ssl crt /etc/haproxy/certs/
	{% if ansible_default_ipv6 | length > 0 -%}
	# Create an AAAA record in DNS using the IP below to IPv6 enable your wiki
	bind {{ ansible_default_ipv6.address }}:443 ssl crt /etc/haproxy/certs/
	{%- endif %}
	
	http-request set-header X-Forwarded-Proto https
	{% if enable_goaccess %}
    # goaccess
	# Add config for websocket server GoAccess
	acl is_websocket hdr(Upgrade) -i WebSocket
	use_backend ws if is_websocket
	{% endif %}
	# certbot
	acl letsencrypt-acl path_beg /.well-known/acme-challenge/
	use_backend letsencrypt-backend if letsencrypt-acl
	default_backend www-backend

backend www-backend
	redirect scheme https if !{ ssl_fc }
	{% for host in groups['app-servers'] -%}
		{%- if host == inventory_hostname -%}
			server apache{{ loop.index }} 127.0.0.1:8080 check
		{%- else -%}
			server apache{{ loop.index }} {{ host }}:8080 check
		{%- endif %}

	{% endfor %}

	# HSTS
	# Ref: https://www.haproxy.com/blog/haproxy-and-http-strict-transport-security-hsts-header-in-http-redirects/
	# Note: slight modification for HAProxy 1.6+
	http-response set-header Strict-Transport-Security max-age=16000000;\ includeSubDomains;\ preload;

    # @FIXME loop w/ index and tie all
	# app servers together with controller as registry 
	{% if m_install_netdata %}
frontend netdata
	bind *:20000 ssl crt /etc/haproxy/certs/
	mode http
	default_backend netdata-back
backend netdata-back
	server nd1 127.0.0.1:19999
	{% endif %}

{% endif %}




{% if m_setup_php_profiling %}
listen php-profiling
	bind *:8088
	{% for host in groups['app-servers'] -%}
		server profiling{{ loop.index }} {{ host }}:8089 check
	{% endfor %}
{% endif %}




{% if load_balancer_handle_internal %}

listen parsoid-internal
	bind *:8001
	{% for host in groups['parsoid-servers'] -%}
		server parsoid{{ loop.index }} {{ host }}:8000 check
	{% endfor %}


listen mediawiki-internal
	bind *:8081
	{% for host in groups['app-servers'] -%}
		{%- if host == inventory_hostname -%}
			server mediawiki{{ loop.index }} 127.0.0.1:8080 check
		{%- else -%}
			server mediawiki{{ loop.index }} {{ host }}:8080 check
		{%- endif %}

	{% endfor %}

{% endif %}



{% if enable_haproxy_stats %}
listen stats
	bind *:1936 ssl crt /etc/haproxy/certs/
	stats enable
	stats hide-version
	stats realm Haproxy\ Statistics
	stats uri /haproxy
	stats auth {{ haproxy_stats_user }}:{{ haproxy_stats_password }}
	stats refresh 30s
{% endif %}

{% if enable_goaccess %}
backend ws
    mode http
    option forwardfor
    option http-server-close
    option forceclose
    no option httpclose
    server ws1 127.0.0.1:7890 ssl verify none

{% endif %}

backend letsencrypt-backend
	server letsencrypt 127.0.0.1:54321
